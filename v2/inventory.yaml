openapi: 3.0.0
info:
  title: Netris API
  version: v2
paths:
  /api/v2/hw:
    get:
      tags:
        - Inventory
      summary: Request for getting hardware list.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hwList'
  /api/v2/hw/{id}:
    get:
      tags:
        - Inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      summary: Request for getting hardware by id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hwList'
  /api/v2/hw/switch:
    post:
      tags:
        - Inventory
      summary: Request for adding hardware type switch.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchAddBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/switch/{id}:
    put:
      tags:
        - Inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      summary: Request for updating hardware type switch.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchEditBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/equinix-metal-server:
    post:
      tags:
        - Inventory
      summary: Request for adding hardware type equinix-metal-server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/equinixMetalServerAddBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/equinix-metal-server/{id}:
    put:
      tags:
        - Inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      summary: Request for updating hardware type equinix-metal-server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/equinixMetalServerEditBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/phoenixnap-bmc-server:
    post:
      tags:
        - Inventory
      summary: Request for adding hardware type phoenixnap-bmc-server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phoenixNapBmcServerAddBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
        "400":
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseError'
                  - type: object
                    properties:
                      message:
                        example: Error creating server
  /api/v2/hw/phoenixnap-bmc-server/{id}:
    put:
      tags:
        - Inventory
      parameters:
        - name: id
          description: The id of a specific site.
          in: path
          required: true
          schema:
            type: integer
      summary: Request for updating hardware type phoenixnap-bmc-server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/phoenixNapBmcServerEditBody'
                - type: object
                  properties:
                    name:
                      example: srv2-123-2342132
                    description:
                      example: phoenix bmc server
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1235
                      message:
                        example: Successfully updated
        "400":
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseError'
                  - type: object
                    properties:
                      message:
                        example: Error updating server
        "404":
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseError'
                  - type: object
                    properties:
                      message:
                        example: Not found
                      meta:
                        type: object
                        properties:
                          statusCode:
                            example: 404
  /api/v2/hw/server:
    post:
      tags:
        - Inventory
      summary: Request for adding hardware type server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serverAddBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/server/{id}:
    put:
      tags:
        - Inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      summary: Request for updating hardware type server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serverEditBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/softgate:
    post:
      tags:
        - Inventory
      summary: Request for adding hardware type softgate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/softgateAddBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/softgate/{id}:
    put:
      tags:
        - Inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      summary: Request for updating hardware type softgate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/softgateEditBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1231
                      message:
                        example: Successfully created
  /api/v2/hw/{type}/{id}:
    delete:
      tags:
        - Inventory
      parameters:
        - in: path
          name: type
          schema:
            type: string
            enum:
              - switch
              - controller
              - softgate
          required: true
          description: Type of the hardware.
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the hardware.
      summary: Request for deleting hardware by id.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          data:
                            type: object
                      message:
                        example: Successfully created
  /api/v2/hw/{type}/{name}:
    delete:
      tags:
        - Inventory
      parameters:
        - in: path
          name: type
          schema:
            type: string
            enum:
              - switch
              - controller
              - softgate
          required: true
          description: Type of the hardware.
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: Name of the hardware.
      summary: Request for deleting hardware by name.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseOK'
                  - type: object
                    properties:
                      data:
                        type: object
  /api/v2/hw/usedips:
    get:
      tags:
        - Inventory
      summary: ""
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - errors
                  - message
                  - isSuccess
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                  errors:
                    type: object
                    example: {}
                    description: ""
                  message:
                    type: string
                    example: ""
                    description: ""
                  isSuccess:
                    type: boolean
                    example: true
                    description: ""
                  meta:
                    type: object
                    example:
                      apiVersion: v2
                      statusCode: 200
                    description: ""
  /api/v2/hw/profiles:
    get:
      tags:
        - Inventory
      summary: ""
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - errors
                  - message
                  - isSuccess
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                  errors:
                    type: object
                    example: {}
                    description: ""
                  message:
                    type: string
                    example: ""
                    description: ""
                  isSuccess:
                    type: boolean
                    example: true
                    description: ""
                  meta:
                    type: object
                    example:
                      apiVersion: v2
                      statusCode: 200
                    description: ""
  /api/v2/hw/subnets:
    get:
      tags:
        - Inventory
      summary: ""
      parameters:
        - name: siteID
          in: query
          required: true
          schema:
            type: integer
          description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - errors
                  - message
                  - isSuccess
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                  errors:
                    type: object
                    example: {}
                    description: ""
                  message:
                    type: string
                    example: ""
                    description: ""
                  isSuccess:
                    type: boolean
                    example: true
                    description: ""
                  meta:
                    type: object
                    example:
                      apiVersion: v2
                      statusCode: 200
                    description: ""
  /api/v2/hw/nos:
    get:
      tags:
        - Inventory
      summary: ""
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - errors
                  - message
                  - isSuccess
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Cumulus NVUE
                        tag:
                          type: string
                          example: cumulus_nvue
                  errors:
                    type: object
                    example: {}
                    description: ""
                  message:
                    type: string
                    example: ""
                    description: ""
                  isSuccess:
                    type: boolean
                    example: true
                    description: ""
                  meta:
                    type: object
                    example:
                      apiVersion: v2
                      statusCode: 200
                    description: ""
components:
  schemas:
    asnString:
      type: string
      enum:
        - auto
      example: auto
    asnNumber:
      type: number
      minimum: 4200000000
      maximum: 4209999999
      example: 4200000001
    hwList:
      type: object
      required:
        - data
        - errors
        - message
        - isSuccess
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/hwItem'
        errors:
          type: object
          example: {}
          description: ""
        message:
          type: string
          example: ""
          description: ""
        isSuccess:
          type: boolean
          example: true
          description: ""
        meta:
          type: object
          example:
            apiVersion: v2
            statusCode: 200
          description: ""
    hwItem:
      type: object
      description: ""
      properties:
        id:
          type: number
          example: 1
          description: ""
        name:
          type: string
          example: switch1.netris.io
          description: ""
        description:
          type: string
          example: Santa-Clara Spine Switch
          description: ""
        type:
          type: string
          example: switch
          description: ""
        status:
          type: string
          example: ok
          description: ""
        nos:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Cumulus NVUE
            tag:
              type: string
              example: cumulus_nvue
              enum:
                - arista_eos
                - cumulus_nvue
                - dell_sonic
                - ec_sonic
          description: ""
        mainAddress:
          type: string
          example: 100.64.77.4
          description: ""
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: ""
        macAddress:
          type: string
          example: 23:00:2F:BE:54:87
          description: ""
        portCount:
          type: number
          example: 16
          description: ""
        asn:
          type: string
          example: auto
          description: ""
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: ""
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: ""
        profile:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: my_profile
          description: ""
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
        sgFlavor:
          description: Specifies the flavor of the softgate object. This field is applicable only to objects of type 'softgate'.
          nullable: true
          type: string
          enum:
          - sg
          - sg-pro
          - sg-hs
          example: null
        sgRole:
          description: Specifies the role of the softgate object. This field is applicable only to objects of type 'softgate' with sgFlavor 'sg-hs'.
          nullable: true
          type: string
          enum:
          - general
          - snat
          example: null
        srvRole:
          description: |
            Use the 'generic' role if no Netris agent is running on the server. If the Netris integration agent is required on the server, select the appropriate platform type as the role.
          nullable: true
          type: string
          enum:
          - generic
          - hyperv_cs
          example: null
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
        createdDate:
          type: number
          example: 1617280628000
          description: Time in milliseconds
        modifiedDate:
          type: number
          example: 1617365215000
          description: Time in milliseconds
    switchAddBody:
      type: object
      required:
        - name
        - tenant
        - nos
        - asn
        - site
        - portCount
        - mgmtAddress
        - mainAddress
      properties:
        name:
          type: string
          example: switch22.netris.io
          description: Switch hostname. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: Santa-Clara Spine Switch
        nos:
          type: object
          properties:
            id:
              type: number
              example: 3
            name:
              type: string
              example: Dell-SONiC
            tag:
              type: string
              example: dell_sonic
              enum:
                - arista_eos
                - cumulus_nvue
                - dell_sonic
                - ec_sonic
          description: Network operating system name.
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        macAddress:
          type: string
          example: 23:00:2F:BE:54:87
          description: The MAC address is used for unit identification during zero touch provisioning of the operating system.
        portCount:
          type: number
          example: 16
          description: Preliminary port count is used for definition of topology. When hardware unit registers itself with Netris, the port count will sync up with the real count.
        asn:
          oneOf:
            - $ref: '#/components/schemas/asnString'
            - $ref: '#/components/schemas/asnNumber'
          description: BGP ASN number of the unit.<br> We recommend assigning unique AS numbers automatically.<br> Allowed values:<br> - \<AS Number\><br> - "auto"
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: Users of this tenant will be permitted to edit this unit.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: Select the site where this device belongs.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        profile:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: my_profile
          description: Select an inventory profile to define global configuration (NTP, DNS, timezone, etc…)<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
        breakout:
          type: string
          enum:
            - "off"
            - disabled
            - 4x10
            - 4x25
            - 2x50
            - 4x50
            - 2x100
            - 4x100
            - 2x200
            - 4x200
            - 2x400
          example: "off"
          description: Initial break out applies to all switch ports of this switch. Individual breakouts are available under the Network->Interfaces section.
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    switchEditBody:
      type: object
      required:
        - name
        - nos
        - asn
        - mgmtAddress
        - mainAddress
      properties:
        name:
          type: string
          example: switch22.netris.io
          description: Switch hostname. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: Santa-Clara Spine Switch
        nos:
          type: object
          properties:
            id:
              type: number
              example: 3
            name:
              type: string
              example: Dell-SONiC
            tag:
              type: string
              example: dell_sonic
              enum:
                - arista_eos
                - cumulus_nvue
                - dell_sonic
                - ec_sonic
          description: Network operating system of the unit.
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        macAddress:
          type: string
          example: 23:00:2F:BE:54:87
          description: The MAC address is used for unit identification during zero touch provisioning of the operating system.
        asn:
          enum:
            - auto
            - manual
          description: BGP ASN number of the unit.<br> We recommend assigning unique AS numbers automatically.<br> Allowed values:<br> - \<AS Number\><br> - "auto"
        profile:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: my_profile
          description: Select an inventory profile to define global configuration (NTP, DNS, timezone, etc…)<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        maintenanceMode:
          type: boolean
          description: ""
          example: false
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    equinixMetalServerAddBody:
      type: object
      required:
        - name
        - tenant
        - site
        - uuid
      properties:
        name:
          type: string
          example: hyper1-685abcdf-43e1-421e-b7b5-d05dfb3ee98e
          description: Equinix metal server name-id. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: hyper1 server
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: Users of this tenant will be permitted to edit this unit.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: Select the site where this device belongs.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        uuid:
          type: string
          example: 685abcdf-43e1-421e-b7b5-d05dfb3ee98e
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    equinixMetalServerEditBody:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: hyper1-685abcdf-43e1-421e-b7b5-d05dfb3ee98e
          description: Equinix metal server name-id. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: hyper1 server
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    phoenixNapBmcServerAddBody:
      type: object
      required:
        - name
        - tenant
        - site
        - uuid
      properties:
        name:
          type: string
          example: hyper1-685abcdf-43e1-421e-b7b5-d05dfb3ee98e
          description: Equinix metal server name-id. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: hyper1 server
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: Users of this tenant will be permitted to edit this unit.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: Select the site where this device belongs.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        uuid:
          type: string
          example: 685abcdf-43e1-421e-b7b5-d05dfb3ee98e
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    phoenixNapBmcServerEditBody:
      type: object
      required:
        - name
        - description
        - uuid
      properties:
        name:
          type: string
          example: hyper1-685abcdf-43e1-421e-b7b5-d05dfb3ee98e
          description: Equinix metal server name-id. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: hyper1 server
        uuid:
          type: string
          example: 685abcdf-43e1-421e-b7b5-d05dfb3ee98e
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    serverAddBody:
      type: object
      required:
        - name
        - tenant
        - site
        - portCount
      properties:
        name:
          type: string
          example: server22.netris.io
          description: Server hostname. Value must comply to RFC-952.
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: Users of this tenant will be permitted to edit this unit.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: Select the site where this device belongs.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        portCount:
          type: number
          example: 2
          description: ""
          maximum: 64
          minimum: 0
        description:
          type: string
          description: Descriptive name
          example: Santa-Clara Edge Server
        asn:
          oneOf:
            - $ref: '#/components/schemas/asnString'
            - $ref: '#/components/schemas/asnNumber'
          description: BGP ASN number of the unit.<br> We recommend assigning unique AS numbers automatically.<br> Allowed values:<br> - \<AS Number\><br> - "auto"
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        customData:
          type: string
          description: Any custom data that can be assosiated with the object.
        srvRole:
          description: |
            Use the 'generic' role if no Netris agent is running on the server. If the Netris integration agent is required on the server, select the appropriate platform type as the role.
          nullable: true
          type: string
          enum:
          - generic
          - hyperv_cs
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
    serverEditBody:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: server01.netris.io
          description: Server hostname. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: Santa Clara Edge Server
        asn:
          oneOf:
            - $ref: '#/components/schemas/asnString'
            - $ref: '#/components/schemas/asnNumber'
          description: BGP ASN number of the unit.<br> We recommend assigning unique AS numbers automatically.<br> Allowed values:<br> - \<AS Number\><br> - "auto"
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        customData:
          type: string
          description: Any custom data that can be assosiated with the object.
        srvRole:
          description: |
            Use the 'generic' role if no Netris agent is running on the server. If the Netris integration agent is required on the server, select the appropriate platform type as the role.
          nullable: true
          type: string
          enum:
          - generic
          - hyperv_cs
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
    softgateAddBody:
      type: object
      required:
        - name
        - tenant
        - site
        - mainAddress
      properties:
        name:
          type: string
          example: softgate22.netris.io
          description: SoftGate hostname. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: Santa-Clara SoftGate
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        tenant:
          type: object
          properties:
            id:
              type: number
              example: 12
            name:
              type: string
              example: UNIX
          description: Users of this tenant will be permitted to edit this unit.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        site:
          type: object
          properties:
            id:
              type: number
              example: 22
            name:
              type: string
              example: Santa-Clara
          description: Select the site where this device belongs.<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        profile:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: my_profile
          description: Select an inventory profile to define global configuration (NTP, DNS, timezone, etc…)<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
        sgFlavor:
          description: Specifies the flavor of the softgate object. If not provided, the default value will be "sg"
          nullable: true
          default: sg
          type: string
          enum:
          - sg
          - sg-pro
          - sg-hs
          example: sg-hs
        sgRole:
          description: Specifies the role of the SoftGate object. This parameter is applicable only for objects of the "softgate" type with the "sg-hs" flavor. If not provided, the default role is set to "general".
          nullable: true
          default: general
          type: string
          enum:
          - general
          - snat
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    softgateEditBody:
      type: object
      required:
        - name
        - mainAddress
      properties:
        name:
          type: string
          example: softgate22.netris.io
          description: SoftGate hostname. Value must comply to RFC-952.
        description:
          type: string
          description: Descriptive name
          example: Santa-Clara Softgate
        mainAddress:
          type: string
          example: 100.64.77.4
          description: A unique IP address which will be used as a loopback address of this unit.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        mgmtAddress:
          type: string
          example: 10.10.20.4
          description: A unique IP address to be used on out of band management interface. Choose DHCP if you want to let IP address assignment to your out of band management network DHCP server.<br> Allowed values:<br> - \<ip address\><br> - "auto"<br>
        profile:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: my_profile
          description: Select an inventory profile to define global configuration (NTP, DNS, timezone, etc…)<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
        maintenanceMode:
          type: boolean
          description: ""
          example: false
        links:
          type: array
          items:
            $ref: '#/components/schemas/linksBody'
        sgRole:
          description: Specifies the role of the SoftGate object. This parameter is applicable only for objects of the "softgate" type with the "sg-hs" flavor. If not provided, the default role is set to "general".
          nullable: true
          default: general
          type: string
          enum:
          - general
          - snat
          example: null
        tags:
          type: array
          items:
            type: string
          example:
            - tag1
            - tag2
    linksBody:
      type: object
      description: Physical connection
      properties:
        local:
          type: object
          description: Current unit physical port<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
          properties:
            id:
              type: number
              example: 21311
            name:
              type: string
              example: swp56@switch22.netris.io
        remote:
          type: object
          description: Remote unit physical port<br> Allowed values:<br> Can be specified either <b>id</b> or <b>name</b>. When both the <b>id</b> and <b>name</b> are specified, <b>id</b> is used
          properties:
            id:
              type: number
              example: 43534
            name:
              type: string
              example: swp10@switch5.netris.io
    ResponseOK:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            type: object
        errors:
          type: object
          properties:
            key:
              type: string
        message:
          type: string
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    ResponseError:
      type: object
      description: Error response
      properties:
        data:
          type: array
          items:
            type: object
        errors:
          type: object
          properties:
            key:
              type: string
        message:
          type: string
          example: Error message
        isSuccess:
          type: boolean
          example: false
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 400
