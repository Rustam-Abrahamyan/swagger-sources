openapi: 3.0.0
info:
  title: Netris API
  version: v2
paths:
  /api/v2/cluster-server-template:
    get:
      tags:
        - Cluster Server Templates
      summary: Request for getting the cluster server templates.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.get.ok'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.error'
    post:
      tags:
        - Cluster Server Templates
      summary: Request for adding a cluster server template.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustersrvtmpl.post.body'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 23
                  message:
                    example: "Successfully created."
                  isSuccess: 
                    type: boolean
                    example: true
                  meta:
                        type: object
                        properties:
                          apiVersion:
                            example: 2
                          statusCode:
                            example: 200
                          
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.error'
  /api/v2/cluster-server-template/{id}:
    get:
      tags:
        - Cluster Server Templates
      summary: Request for getting the cluster server templates.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific cluster server template
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.get.one.ok'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.error'
        404:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.response.error'
                  - type: object
                    properties:
                      message:
                        example: Not found.
                      meta:
                        type: object
                        properties:
                          statusCode:
                            example: 404
    put:
      tags:
        - Cluster Server Templates
      summary: Request for editing a cluster server template.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific cluster server template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustersrvtmpl.put.body'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        example: 23
                  message:
                    example: "Successfully updated."
                  isSuccess: 
                    type: boolean
                    example: true
                  meta:
                        type: object
                        properties:
                          apiVersion:
                            example: 2
                          statusCode:
                            example: 200
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.error'
        404:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.response.error'
                  - type: object
                    properties:
                      message:
                        example: Not found.
                      meta:
                        type: object
                        properties:
                          statusCode:
                            example: 404
    delete:
      tags:
        - Cluster Server Templates
      summary: Request for deleting a cluster server template.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific cluster server template
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: null
                  message:
                    example: Successfully deleted.
                  isSuccess: 
                    type: boolean
                    example: true
                  meta:
                    type: object
                    properties:
                      apiVersion: 
                        example: 2
                      statusCode:
                        example: 200
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clustersrvtmpl.response.error'
        404:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.response.error'
                  - type: object
                    properties:
                      message:
                        example: Not found.
                      meta:
                        type: object
                        properties:
                          statusCode:
                            example: 404
components:
  schemas:
    clustersrvtmpl.get.body:
      type: object
      allOf:
        - $ref: '#/components/schemas/clustersrvtmpl.body.id'
        - $ref: '#/components/schemas/clustersrvtmpl.body.name'
        - type: object
          properties:
            vnets:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.body.vnet.id'
                  - $ref: '#/components/schemas/clustersrvtmpl.body.vnet'
                  - type: object
                    properties:
                      createdDate:
                        type: number
                        example: 1617280628000
                        description: Time in milliseconds
                      modifiedDate:
                        type: number
                        example: 1617365215000
                        description: Time in milliseconds
    clustersrvtmpl.post.body:
      type: object
      allOf:
        - $ref: '#/components/schemas/clustersrvtmpl.body.name'
        - type: object
          required:
            - vnets
          properties:
            vnets:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.body.vnet'
    clustersrvtmpl.put.body:
      type: object
      allOf:
        - $ref: '#/components/schemas/clustersrvtmpl.body.name'
        - type: object
          required:
            - vnets
          properties:
            vnets:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/clustersrvtmpl.body.vnet.id'
                  - $ref: '#/components/schemas/clustersrvtmpl.body.vnet'
    clustersrvtmpl.body.vnet:
      required:
        - postfix
        - type
        - vlan
        - vlanID
        - serverNics
      type: object
      properties:
        postfix:
          type: string
          example: "East-West"
        type:
          type: string
          enum: ["l2pvn", "l3vpn", "infiniband"]
          example: "l3vpn"
        vlan:
          type: string
          enum: ["tagged", "untagged"]
          example: "untagged"
        vlanID:
          type: string
          enum: ["auto", "dynamic"]
          example: "auto"
        serverNics:
          type: array
          items:
            type: string
          example: ["eth1", "eth2", "eth3", "eth4"]
        ipv4Gateway:
          oneOf:
            - type: string
              nullable: true
              description: "IPv4 gateway address. Must be a valid IPv4 Cidr."
              example: "10.10.10.254/24"
            - type: string
              description: "dynamic: means it has to be specified during server cluster creation"
              enum: ["dynamic"]
              nullable: true
              example: "dynamic"
        ipv6Gateway:
          oneOf:
            - type: string
              nullable: true
              description: "IPv6 gateway address. Must be a valid IPv6 Cidr."
              example: "2001:db8:85a3::8a2e:370:7334/64"
            - type: string
              description: "dynamic: means it has to be specified during server cluster creation"
              enum: ["dynamic"]
              nullable: true
              example: "dynamic"
    clustersrvtmpl.body.id:
        required:
          - id
        type: object
        properties:
          id:
            description: Cluster server template unique identifier.
            type: integer
            example: 123
    clustersrvtmpl.body.vnet.id:
      required:
        - id
      type: object
      properties:
        id:
          description: vnet property identifier in cluster server template.
          type: integer
          example: 42  
    clustersrvtmpl.body.name:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: My-Cluster-Template-flavor-1
    clustersrvtmpl.response.get.ok:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/clustersrvtmpl.get.body'
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    clustersrvtmpl.response.get.one.ok:
      type: object
      description: Success response
      properties:
        data:
            $ref: '#/components/schemas/clustersrvtmpl.get.body'
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    clustersrvtmpl.response.error:
      type: object
      description: Error response
      properties:
        data:
          type: object
          example: null
        errors:
          type: object
          example:
            property_name: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: Error message
        isSuccess:
          type: boolean
          example: false
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 400
