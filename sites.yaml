openapi: 3.0.0
info:
  title: Netris API
  version: v1
  license:
    name: MIT
servers:
  - url: localhost:3000
paths:
  /api/sites:
    get:
      tags:
        - Sites
      summary: Request for getting sites.
      parameters: []
      responses:
        '200':
          description: OK
    post:
      tags:
        - Sites
      summary: Request for adding site.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteItem'
      responses:
        '200':
          description: OK
  /api/sites/{id}:
    put:
      tags:
        - Sites
      summary: Request for updating site.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The id of a specific site.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/siteItem'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Sites
      summary: Request for deleting site.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the site.
      responses:
        '200':
          description: OK
components:
  schemas:
    siteItem:
      type: object
      required:
        - name
        - nat
        - vpn
        - publicASN
        - physicalInstanceASN
        - virtualInstanceASN
        - rp_id
        - acl_policy
        - switchFabric
      properties:
        name:
          type: string
          example: name
        publicASN:
          type: number
          example: 324
          description: Site public ASN that should be used for external bgp peer configuration.
        physicalInstanceASN:
          type: number
          example: 324
          description: ASN for ROH (Routing on the Host) compute instances, should be unique within the scope of a site, can be same for different sites.
        virtualInstanceASN:
          type: number
          example: 324
          description: ASN for ROH (Routing on the Host) virtual compute instances, should be unique within the scope of a site, can be same for different sites.
        vpn:
          type: string
          example: disabled
          description: 'Please select site to site VPN mode: Disabled, Hub, Spoke or Dynamic Spoke.'
          enum:
            - disabled
            - hub
            - spoke
            - dspoke
        nat:
          type: string
          example: disabled
          description: ASN for server virtualization hypervisors when using in ROH mode, should be unique within the scope of a site, can be same for different sites.
        rp_id:
          type: number
          example: 1
          description: ROH Routing profile defines set of routing prefixes to be advertised to ROH instances.Default route only - Will advertise 0.0.0.0/0 + loopback address of physically connected switch.Default + Aggregate - Will add prefixes of defined assignments + 'Default' profile.Full - Will advertise all prefixes available in the routing table of the connected switch.
          enum:
            - 1
            - 2
            - 3
        acl_policy:
          type: string
          example: permit
          description: Deny - Layer-3 packet forwarding is denied by default. ACLs are required to permit necessary traffic flows. Deny ACLs will be applied before Permit ACLs.Permit - Layer-3 packet forwarding is allowed by default. ACLs are required to deny unwanted traffic flows. Permit ACLs will be applied before Deny ACLs.
          enum:
            - deny
            - permit
        switchFabric:
          type: string
          example: netris
          description: 'Netris - Iâ€™m going to use Netris to automatically manage my Netris-supported switch fabric. Equinux Metal - Netris will consume Equinix Metal API to dynamically leverage Equinix Metal Fabric. Dot1q Trunk - My switch fabric is separate from Netris. I will provide a Dot1q Trunk to Netris SoftGate and my compute servers, so Netris will use VLAN IDs for service encapsulation and isolation. '
          enum:
            - netris
            - equinix_metal
            - dot1q_trunk
        vlanRange:
          type: string
          example: 1-4094
          description: Range of VLAN IDs allowed for use at this site.
        equinixProjectID:
          type: string
          example: ''
          description: Your Equinix Metal Project ID.
        equinixProjectAPIKey:
          type: string
          example: ''
          description: Equinix Project API key with Read/Write permissions.
        equinixLocation:
          type: string
          example: ''
          description: Your Equinix Location.
          enum:
            - se
            - dc
            - at
            - hk
            - am
            - ny
            - ty
            - sl
            - md
            - sp
            - fr
            - sy
            - ld
            - sg
            - pa
            - tr
            - sv
            - la
            - ch
            - da
